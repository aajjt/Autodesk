<!DOCTYPE html>
<html>

<head>
    <title>Autodesk Forge: 3D Viewer App Sample</title>
    <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=no" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <!-- Third Party package -->
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Autodesk Forge Viewer files (IMPORTANT) -->
    <!--<link rel="stylesheet" href="https://developer.api.autodesk.com/modelderivative/v2/viewers/7.*/style.min.css" type="text/css">-->
    <link rel="stylesheet" href="https://developer.api.autodesk.com/modelderivative/v2/viewers/2.*/style.min.css" type="text/css">
    <!-- <script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/7.*/viewer3D.min.js"></script> -->
    <script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/2.*/three.min.js"></script>
    <script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/2.*/viewer3D.min.js"></script>
    <script src="my-awesome-extension.js"></script>
    <!--<style>
        /** Just simple CSS styling to make this page a little nicer **/
        body {
            margin: 0;
            padding: 0;
        }
    </style>-->
    <style>
        body {
            margin: 0;
        }
        #MyViewerDiv {
            width: 100%;
            height: 100%;
            margin: 0;
            background-color: #F0F8FF;
        }
    </style>
</head>

<body>
    <div id="Button"></div>
    <button id="MyAwesomeCutButton">Cut Model!</button>
    <!-- The Viewer will be instantiated here -->
    <div id="MyViewerDiv"></div>
    <!--<button id="MyAwesomeCutButton">Lock it!</button>-->
    <!-- Custom script -->
    <script>
        //var viewer;
        var viewerApp;
        var viewables;
        var indexViewable;
        var options = {
            env: 'AutodeskProduction',
            api: 'derivativeV2', // TODO: for models uploaded to EMEA change this option to 'derivativeV2_EU'
            getAccessToken: getForgeToken
        };
        var documentId = 'urn:' + getUrlParameter('urn');



        Autodesk.Viewing.Initializer(options, function onInitialized(){
            viewerApp = new Autodesk.Viewing.ViewingApplication('MyViewerDiv');
            var config3d = {
            extensions: ['MyAwesomeExtension']
            };
            viewerApp.registerViewer(viewerApp.k3D, Autodesk.Viewing.Private.GuiViewer3D, config3d);
            //viewerApp.registerViewer(viewerApp.k3D, Autodesk.Viewing.Private.GuiViewer3D);
            viewerApp.loadDocument(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);
        });

        function onDocumentLoadSuccess(doc) {

            // We could still make use of Document.getSubItemsWithProperties()
            // However, when using a ViewingApplication, we have access to the **bubble** attribute,
            // which references the root node of a graph that wraps each object from the Manifest JSON.
            var viewables = viewerApp.bubble.search({'type':'geometry'});
            if (viewables.length === 0) {
                console.error('Document contains no viewables.');
                return;
            }

            // Choose any of the avialble viewables
            viewerApp.selectItem(viewables[0].data, onItemLoadSuccess, onItemLoadFail);
        }

        function onDocumentLoadFailure(viewerErrorCode) {
            console.error('onDocumentLoadFailure() - errorCode:' + viewerErrorCode);
        }

        function onItemLoadSuccess(viewer, item) {
            console.log('onItemLoadSuccess()!');
            console.log(viewer);
            console.log(item);

            // Congratulations! The viewer is now ready to be used.
            console.log('Viewers are equal: ' + (viewer === viewerApp.getCurrentViewer()));
        }

        function onItemLoadFail(errorCode) {
            console.error('onItemLoadFail() - errorCode:' + errorCode);
        }




        // Run this when the page is loaded
        //Autodesk.Viewing.Initializer(options, function onInitialized(){
            // Find the element where the 3d viewer will live.    
            //var htmlElement = document.getElementById('MyViewerDiv');
            //if (htmlElement) {
                // Create and start the viewer in that element    
               // viewer = new Autodesk.Viewing.GuiViewer3D(htmlElement);
               // viewer.start();
                // Load the document into the viewer.
              //  Autodesk.Viewing.Document.load(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);
            //}
       // });

        /**
        * Autodesk.Viewing.Document.load() success callback.
        * Proceeds with model initialization.
        */
       // function onDocumentLoadSuccess(doc) {
            // Load the default viewable geometry into the viewer.
            // Using the doc, we have access to the root BubbleNode,
            // which references the root node of a graph that wraps each object from the Manifest JSON.
           // var viewable = doc.getRoot().getDefaultGeometry();
           // if (viewable) {
              //  viewer.loadDocumentNode(doc, viewable).then(function(result) {
              //      console.log('Viewable Loaded!');
              //  }).catch(function(err) {
              //      console.log('Viewable failed to load.');
              //      console.log(err);
              //  }
             // )
           // }
        //}

        /**
        * Autodesk.Viewing.Document.load() failure callback.
        */
       // function onDocumentLoadFailure(viewerErrorCode) {
        //    console.error('onDocumentLoadFailure() - errorCode: ' + viewerErrorCode);
        //    jQuery('#MyViewerDiv').html('<p>Translation in progress... Please try refreshing the page.</p>');
       // }

        // Get Query string from URL,
        // we will use this to get the value of 'urn' from URL
        function getUrlParameter(name) {
            name = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        }

        // Get public access token for read only,
        // using ajax to access route /api/forge/oauth/public in the background
        function getForgeToken(callback) {
            jQuery.ajax({
                url: '/api/forge/oauth/public',
                success: function (res) {
                    callback(res.access_token, res.expires_in);
                }
            });
        }
        
  </script>
</body>

</html>